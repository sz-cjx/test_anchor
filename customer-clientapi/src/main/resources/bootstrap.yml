#自定义配置
arb:
  service:
    name: customer-clientapi
    port: 9102
eureka:
  instance:
    instance-id: ${arb.service.url}:${arb.service.name}:${arb.service.port}
    hostname: ${arb.service.url}
    ip-address: ${arb.service.url}
    prefer-ip-address: true
    lease-renewal-interval-in-seconds: 5
    lease-expiration-duration-in-seconds: 10
  client:
    healthcheck: enabled
    service-url:
      defaultZone: http://${arb.eureka.url}:8901/eureka/

server:
  max-http-header-size: 10240
  port: ${arb.service.port}
spring:
  application:
    name: ${arb.service.name}
  cloud:
    config:
      label: master
      discovery:
        enabled: true
        service-id: config-server
      fail-fast: true
      retry:
        initial-interval: 1000
        multiplier: 1.1
        max-interval: 2000
        max-attempts: 2
  datasource:
    master:
      writer:
        type: com.alibaba.druid.pool.DruidDataSource # Druid数据库连接池
        driver-class-name: com.mysql.jdbc.Driver
        url: jdbc:mysql://${arb.database.writer.url}/${arb.database.schema}?charset=utf8mb4&useSSL=false&rewriteBatchedStatements=true&autoReconnect=true
        username: ${arb.database.username}
        password: ${arb.database.password}
        testOnBorrow: true                          # 指明是否从池中取出连接前进行检验，如果检验失败，则从池中取出连接并尝试取出另一个
        testOnReturn: true                          # 指明连接是否被空闲连接回收器（如果有）进行检验，如果检测失败，则连接将被从池中去除
        testWhileIdle: true
        timeBetweenEvictionRunsMillis: 60000        # 在空闲连接回收器线程运行期间休眠的时间值，姨毫秒为单位。如果设置为非整数，则不运行空闲连接回收器线程
        initialSize: 20
        minIdle: 20
        maxActive: 256
        maxWait: 60000                              # 配置获取连接等待超时的时间
        minEvictableIdleTimeMillis: 300000          # 配置一个连接在池中最小生存的时间，单位是毫秒
        validationQuery: SELECT'x'
        poolPreparedStatements: true                # 打开PSCache，并且指定每个连接上PSCache的大小
        maxPoolPreparedStatementPerConnectionSize: 20
        filters: stat,wall,slf4j                    # 配置监控统计拦截的filters，去掉后监控界面sql无法统计，'wall'用于防火墙，此处是filter修改的地方
      reader:
        type: com.alibaba.druid.pool.DruidDataSource # Druid数据库连接池
        driver-class-name: com.mysql.jdbc.Driver
        url: jdbc:mysql://${arb.database.reader.url}/${arb.database.schema}?charset=utf8mb4&useSSL=false&rewriteBatchedStatements=true&autoReconnect=true
        username: ${arb.database.username}
        password: ${arb.database.password}
        testOnBorrow: true                          # 指明是否从池中取出连接前进行检验，如果检验失败，则从池中取出连接并尝试取出另一个
        testOnReturn: true                          # 指明连接是否被空闲连接回收器（如果有）进行检验，如果检测失败，则连接将被从池中去除
        testWhileIdle: true
        timeBetweenEvictionRunsMillis: 60000        # 在空闲连接回收器线程运行期间休眠的时间值，姨毫秒为单位。如果设置为非整数，则不运行空闲连接回收器线程
        initialSize: 20
        minIdle: 20
        maxActive: 256
        maxWait: 60000                              # 配置获取连接等待超时的时间
        minEvictableIdleTimeMillis: 300000          # 配置一个连接在池中最小生存的时间，单位是毫秒
        validationQuery: SELECT'x'
        poolPreparedStatements: true                # 打开PSCache，并且指定每个连接上PSCache的大小
        maxPoolPreparedStatementPerConnectionSize: 20
        filters: stat,wall,slf4j                    # 配置监控统计拦截的filters，去掉后监控界面sql无法统计，'wall'用于防火墙，此处是filter修改的地方
---
spring:
  profiles: local-v3.1
arb:
  eureka:
    url: localhost
  service:
    url: localhost
---
spring:
  profiles: develop-v3.1
arb:
  eureka:
    url: FRAMEWORK-EUREKA-SERVER-TEST.us-west-1.elasticbeanstalk.com
  service:
    url: MICROSERVICE-CUSTOMER-CLIENTAPI-TEST.us-west-1.elasticbeanstalk.com